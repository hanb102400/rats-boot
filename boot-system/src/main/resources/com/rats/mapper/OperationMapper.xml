<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rats.mapper.OperationMapper">
    <resultMap id="BaseResultMap" type="com.rats.entity.Operation">

        <id column="id"  jdbcType="INTEGER" property="id"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId" />
        <result column="parent_ids" jdbcType="VARCHAR" property="parentIds" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="state" jdbcType="CHAR" property="state" />
    </resultMap>

    <sql id="Base_Column_List">
             id ,  parent_id ,  parent_ids ,  name ,  code ,  state  
    </sql>

    <select id="selectByExample"  parameterType="com.rats.framework.common.persistence.Example" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_sys_operation
        <if test="_parameter != null" >
            <include refid="common.Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from t_sys_operation
        where  id = #{id ,jdbcType=INTEGER}  

    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_sys_operation
        where  id = #{id ,jdbcType=INTEGER}  

    </delete>

    <delete id="deleteByExample" parameterType="com.rats.framework.common.persistence.Example">
        delete from t_sys_operation
        <if test="_parameter != null" >
            <include refid="common.Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.rats.entity.Operation">
        insert into t_sys_operation (
             id ,  parent_id ,  parent_ids ,  name ,  code ,  state  
        ) values (
             #{id, jdbcType=INTEGER} ,  #{parentId, jdbcType=INTEGER} ,  #{parentIds, jdbcType=VARCHAR} ,  #{name, jdbcType=VARCHAR} ,  #{code, jdbcType=VARCHAR} ,  #{state, jdbcType=CHAR}  
        )
    </insert>

    <insert id="insertSelective" parameterType="com.rats.entity.Operation">
        insert into t_sys_operation
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
            id,
        </if>
        <if test="parentId != null">
            parent_id,
        </if>
        <if test="parentIds != null">
            parent_ids,
        </if>
        <if test="name != null">
            name,
        </if>
        <if test="code != null">
            code,
        </if>
        <if test="state != null">
            state,
        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
            #{id, jdbcType=INTEGER} ,
        </if>
        <if test="parentId != null">
            #{parentId, jdbcType=INTEGER} ,
        </if>
        <if test="parentIds != null">
            #{parentIds, jdbcType=VARCHAR} ,
        </if>
        <if test="name != null">
            #{name, jdbcType=VARCHAR} ,
        </if>
        <if test="code != null">
            #{code, jdbcType=VARCHAR} ,
        </if>
        <if test="state != null">
            #{state, jdbcType=CHAR} ,
        </if>
        </trim>
    </insert>


    <update id="updateByExampleSelective" parameterType="map">
        update t_sys_operation
        <set>
            <if test="record.id != null">
                id = #{record.id, jdbcType=INTEGER} ,
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId, jdbcType=INTEGER} ,
            </if>
            <if test="record.parentIds != null">
                parent_ids = #{record.parentIds, jdbcType=VARCHAR} ,
            </if>
            <if test="record.name != null">
                name = #{record.name, jdbcType=VARCHAR} ,
            </if>
            <if test="record.code != null">
                code = #{record.code, jdbcType=VARCHAR} ,
            </if>
            <if test="record.state != null">
                state = #{record.state, jdbcType=CHAR} ,
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="common.Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update t_sys_operation
        set
            id = #{record.id, jdbcType=INTEGER} ,
            parent_id = #{record.parentId, jdbcType=INTEGER} ,
            parent_ids = #{record.parentIds, jdbcType=VARCHAR} ,
            name = #{record.name, jdbcType=VARCHAR} ,
            code = #{record.code, jdbcType=VARCHAR} ,
            state = #{record.state, jdbcType=CHAR} ,
        <if test="_parameter != null">
            <include refid="common.Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.rats.entity.Operation">
        update t_sys_operation
        <set>
            <if test="parentId != null">
                parent_id =#{parentId, jdbcType=INTEGER} ,
            </if>
            <if test="parentIds != null">
                parent_ids =#{parentIds, jdbcType=VARCHAR} ,
            </if>
            <if test="name != null">
                name =#{name, jdbcType=VARCHAR} ,
            </if>
            <if test="code != null">
                code =#{code, jdbcType=VARCHAR} ,
            </if>
            <if test="state != null">
                state =#{state, jdbcType=CHAR} ,
            </if>
        </set>
        where  id = #{id ,jdbcType=INTEGER}  

    </update>

    <update id="updateByPrimaryKey" parameterType="com.rats.entity.Operation">
        update t_sys_operation
        set
            id = #{id, jdbcType=INTEGER} ,
            parent_id = #{parentId, jdbcType=INTEGER} ,
            parent_ids = #{parentIds, jdbcType=VARCHAR} ,
            name = #{name, jdbcType=VARCHAR} ,
            code = #{code, jdbcType=VARCHAR} ,
            state = #{state, jdbcType=CHAR} 
        where  id = #{id ,jdbcType=INTEGER}  

    </update>



    <select id="countByExample" parameterType="com.rats.framework.common.persistence.Example" resultType="java.lang.Long">
        select count(*) from t_sys_operation
        <if test="_parameter != null">
            <include refid="common.Example_Where_Clause" />
        </if>
    </select>

</mapper>


